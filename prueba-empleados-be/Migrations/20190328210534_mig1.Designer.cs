// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace pruebaempleadosbe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190328210534_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Barrio", b =>
                {
                    b.Property<int>("BarrioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idLocalidad");

                    b.Property<string>("nombre");

                    b.HasKey("BarrioID");

                    b.HasIndex("idLocalidad");

                    b.ToTable("Barrios");
                });

            modelBuilder.Entity("Models.Domicilio", b =>
                {
                    b.Property<int>("DomicilioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("calle");

                    b.Property<int>("idBarrio");

                    b.Property<int>("numero");

                    b.HasKey("DomicilioID");

                    b.HasIndex("idBarrio");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido");

                    b.Property<int>("dni");

                    b.Property<string>("email");

                    b.Property<string>("fechaNac");

                    b.Property<int>("idDomicilio");

                    b.Property<int>("idPuesto");

                    b.Property<int>("legajo");

                    b.Property<string>("nombre");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("idDomicilio");

                    b.HasIndex("idPuesto");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Models.Localidad", b =>
                {
                    b.Property<int>("LocalidadID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre");

                    b.HasKey("LocalidadID");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("Models.Puesto", b =>
                {
                    b.Property<int>("PuestoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre");

                    b.HasKey("PuestoID");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("Models.Barrio", b =>
                {
                    b.HasOne("Models.Localidad", "localidad")
                        .WithMany()
                        .HasForeignKey("idLocalidad")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Models.Domicilio", b =>
                {
                    b.HasOne("Models.Barrio", "barrio")
                        .WithMany()
                        .HasForeignKey("idBarrio")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Models.Empleado", b =>
                {
                    b.HasOne("Models.Domicilio", "domicilio")
                        .WithMany()
                        .HasForeignKey("idDomicilio")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.Puesto", "puesto")
                        .WithMany()
                        .HasForeignKey("idPuesto")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
